{"version":3,"sources":["Components/Cards/card.components.js","Components/CardList/card_list.main.js","Components/search-box/search_box.components.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","friend","id","alt","name","email","CardList","friends","map","SearchBox","placeholder","handlechange","type","onChange","App","state","fetch","then","res","json","data","setState","e","this","searchField","target","value","filtered_friends","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAWeA,EAVF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,OAAOC,GAAvC,0BAAmEC,IAAI,KAC/E,6BAAKL,EAAMG,OAAOG,OAClB,6BAAKN,EAAMG,OAAOI,YCQfC,EAZE,SAACR,GACd,OACI,qBAAKC,UAAU,YAAf,SAEID,EAAMS,QAAQC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCIjBO,G,MAVG,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAYC,EAAkB,EAAlBA,aAC5B,OACQ,uBACAC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAUF,MCqGPG,E,kDArGb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACX,QAAW,GACX,YAAgB,IAJP,E,qDAOb,WACC,IAAD,OACEC,MAAM,+CACLC,MAAK,SAACC,GACL,OAAOA,EAAIC,UACVF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAC9Bd,QAAUa,S,0BAGd,SAAaE,GAETC,KAAKF,SACD,CACAG,YAAcF,EAAEG,OAAOC,U,oBAI/B,WAAU,IAAD,OACP,EAA+BH,KAAKR,MAA7BR,EAAP,EAAOA,QAAQiB,EAAf,EAAeA,YACTG,EAAmBpB,EAAQqB,QAAO,SAAC3B,GAAD,OACtCA,EAAOG,KAAKyB,cAAcC,SAASN,EAAYK,kBAEjD,OACE,sBAAK9B,UAAU,MAAf,UACA,+CACA,cAAC,EAAD,CAAWW,YAAY,mBAAmBC,aAAgB,SAACW,GAAD,OAAO,EAAKX,aAAaW,MACnF,cAAC,EAAD,CAAUf,QAAWoB,W,GAlCTI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.567809bb.chunk.js","sourcesContent":["import './cards.styles.css'\r\nconst Card = (props) => {\r\n    return ( \r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.friend.id}?set=set2&size=180x180`} alt=\"\" />\r\n            <h1>{props.friend.name}</h1>\r\n            <h2>{props.friend.email}</h2>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Card;","import './card_list.styles.css'\r\nimport Card from '../Cards/card.components'\r\nconst CardList = (props) => {\r\n    return ( \r\n        <div className=\"card-list\">\r\n        {\r\n            props.friends.map((friend)=>(\r\n              <Card key={friend.id} friend={friend} />\r\n            ))\r\n        }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default CardList;","import './search_box.styles.css'\r\nconst  SearchBox= ({placeholder,handlechange}) => {\r\n    return (  \r\n            <input \r\n            type=\"search\" \r\n            className=\"search\"\r\n            placeholder={placeholder}\r\n            onChange={handlechange} />\r\n    );\r\n}\r\n \r\nexport default SearchBox;","\nimport React from \"react\";\nimport './App.css'\nimport { Component } from 'react';\nimport CardList from './Components/CardList/card_list.main'\nimport SearchBox from './Components/search-box/search_box.components'\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      'friends' :[],\n      'searchField' : \"\",\n    }\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users/')\n    .then((res) =>{\n      return res.json()\n    }).then((data) => this.setState({\n      friends : data\n    }))\n  }\n  handlechange(e)\n  {\n      this.setState(\n          {\n          searchField : e.target.value\n        }\n      )\n  }\n  render() {\n    const {friends,searchField } = this.state;\n    const filtered_friends = friends.filter((friend)=>(\n      friend.name.toLowerCase().includes(searchField.toLowerCase()) \n    ))\n    return (\n      <div className=\"App\" >\n      <h1>Monster Cards</h1>\n      <SearchBox placeholder=\"Search the value\" handlechange = {(e) => this.handlechange(e)}/>\n      <CardList friends = {filtered_friends} />\n      </div>\n     \n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function App() {\n//   const [friends, setFriends] = useState([\n//     {\n//       'name':'Nishant Tomar',\n//       'id' : 1,\n//     },\n//     {\n//       'name':'Saksham Mota',\n//       'id' : 2,\n//     },\n//     {\n//       'name':'Sohit Don',\n//       'id' :3,\n//     },\n//     {\n//       'name':'Taliyan',\n//       'id':4,\n//     }\n//   ])\n//   return (\n//     <div className=\"App\">\n//    {\n//      friends.map((friend)=>\n//      (\n//             <div key={friend.id}>\n//             <h1>{friend.name}</h1>\n//             </div>\n//      ))\n//    }\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}